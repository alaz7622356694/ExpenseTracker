{"version":3,"sources":["Components/ExpenseDate/ExpenseDate.js","Components/UI/Card/Card.js","Components/ExpenseItems/ExpenseItems.js","Components/ExpenseFilter/ExpensesFilter.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/TotalExpense.js","Components/Expenses/Expenses.js","Components/ExpenseForm/ExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleDateString","day","toLocaleString","year","getFullYear","className","Card","classes","children","ExpenseItems","title","amount","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","selected2","onChangeFilter2","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","map","item","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","TotalExpense","total","yTotal","Expenses","useState","filteredYear","setFilteredYear","filteredMonth","setFilteredMonth","filter","items","toString","filterYearOnly","TotalAmount","reduce","a","i","allAmounts","selectedYear","selectedMonth","length","id","ExpenseForm","enteredTitle","setEnteredTitle","enteredNumber","setEnteredNumber","enteredDate","setEnteredDate","error","setError","axios","require","onSubmit","preventDefault","trim","expenseData","Date","post","then","response","console","log","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","show","setShow","enteredData","random","onAddExpense","App","setExpenses","useEffect","fetch","json","key","responseData","data","push","fetchData","ReactDOM","render","document","getElementById"],"mappings":"wbAqBeA,EAlBK,SAACC,GAGjB,IAAMC,EAAMD,EAAME,KAAKC,mBAAmB,QAAQ,CAACF,MAAM,SACnDG,EAAIJ,EAAME,KAAKG,eAAe,QAAQ,CAACD,IAAI,YAC3CE,EAAKN,EAAME,KAAKK,cACtB,OACI,8BACK,sBAAKC,UAAU,eAAf,UAEb,qBAAKA,UAAU,oBAAf,SAAoCJ,IACpC,qBAAKI,UAAU,sBAAf,SAAsCP,IACtC,qBAAKO,UAAU,qBAAf,SAAqCF,UCDtBG,G,MAXF,SAACT,GAEV,IAAMU,EAAU,SAAWV,EAAMQ,UACjC,OAEI,qBAAKA,UAAWE,EAAhB,SACKV,EAAMW,aCaJC,EAlBI,SAACZ,GAEhB,OACI,eAAC,EAAD,CAAMQ,UAAU,eAAhB,UACG,cAAC,EAAD,CAAaN,KAAMF,EAAME,OACxB,sBAAKM,UAAU,4BAAf,UAEF,6BAAKR,EAAMa,QACX,sBAAKL,UAAU,sBAAf,cAAuCR,EAAMc,iBCsCxCC,G,YA9CQ,SAACf,GAetB,OACE,qBAAKQ,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQQ,MAAOhB,EAAMiB,SAAUC,SAjBV,SAACC,GAC9BnB,EAAMoB,eAAeD,EAAME,OAAOL,QAgB1B,UAEE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,qBAGF,oDACA,yBAAQA,MAAOhB,EAAMsB,UAAWJ,SAlBV,SAACC,GAE7BnB,EAAMuB,gBAAgBJ,EAAME,OAAOL,QAgB7B,UACE,wBAAQA,MAAM,UAAd,iBACA,wBAAQA,MAAM,WAAd,iBACA,wBAAQA,MAAM,QAAd,iBACA,wBAAQA,MAAM,QAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,iBACA,wBAAQA,MAAM,OAAd,iBACA,wBAAQA,MAAM,SAAd,iBACA,wBAAQA,MAAM,YAAd,iBACA,wBAAQA,MAAM,UAAd,iBACA,wBAAQA,MAAM,WAAd,iBACA,wBAAQA,MAAM,WAAd,2B,QChBKQ,G,MAvBE,SAACxB,GAEd,IAAIyB,EAAc,KAOlB,OAJEzB,EAAM0B,SAAW,IACnBD,EAAgBE,KAAKC,MAAO5B,EAAMgB,MAAQhB,EAAM0B,SAAY,KAAO,KAI/D,sBAAKlB,UAAU,YAAf,UACI,qBAAKA,UAAU,mBAAf,SAEA,qBAAKA,UAAU,kBAAkBqB,MAAO,CAACC,OAAOL,OAIhD,sBAAKjB,UAAU,eAAf,UAA+BR,EAAM+B,MAArC,YCJGC,G,MAZD,SAAChC,GACf,IAAMiC,EAAiBjC,EAAMkC,WAAWC,KAAI,SAAAC,GAAI,OAAEA,EAAKpB,SAEjDqB,EAAaV,KAAKW,IAAL,MAAAX,KAAI,YAAQM,IAE3B,OACI,qBAAKzB,UAAU,QAAf,SACKR,EAAMkC,WAAWC,KAAI,SAACC,GAAD,OAAS,cAAC,EAAD,CAA2BpB,MAAOoB,EAAKpB,MAAOU,SAAUW,EAAcN,MAAOK,EAAKL,OAAnEK,EAAKL,cCuBhDQ,EA7BO,SAACvC,GACnB,IAD6B,EACvBwC,EAAgB,CAClB,CAACT,MAAM,MAAMf,MAAM,GACnB,CAACe,MAAM,MAAMf,MAAM,GACnB,CAACe,MAAM,MAAMf,MAAM,GACnB,CAACe,MAAM,MAAMf,MAAM,GACnB,CAACe,MAAM,MAAMf,MAAM,GACnB,CAACe,MAAM,MAAMf,MAAM,GACnB,CAACe,MAAM,MAAMf,MAAM,GACnB,CAACe,MAAM,MAAMf,MAAM,GACnB,CAACe,MAAM,MAAMf,MAAM,GACnB,CAACe,MAAM,MAAMf,MAAM,GACnB,CAACe,MAAM,MAAMf,MAAM,GACnB,CAACe,MAAM,MAAMf,MAAM,IAbM,cAiBfhB,EAAMyC,UAjBS,IAiBjC,IAAI,EAAJ,qBAAiC,CAAC,IAAxBL,EAAuB,QAEjCI,EADmBJ,EAAKlC,KAAKwC,YACC1B,OAASoB,EAAKtB,QAnBX,8BAwB7B,OACG,cAAC,EAAD,CAAOoB,WAAYM,KCZXG,G,MAhBM,SAAC3C,GAElB,OACI,sBAAKQ,UAAU,gBAAf,UACI,gCAAO,wDAA0B,6BAAKR,EAAMC,aAE5C,sBAAKO,UAAU,uBAAf,eAAyCR,EAAM4C,SAE/C,gCAAO,wDAA0B,6BAAK5C,EAAMM,YAC5C,sBAAKE,UAAU,uBAAf,eAAyCR,EAAM6C,eCoD5CC,EAtDE,SAAC9C,GAClB,MAAqC+C,mBAAS,QAA9C,mBAAOC,EAAP,KAAoBC,EAApB,KAQQ,EAAuCF,mBAAS,WAAhD,mBAAOG,EAAP,KAAqBC,EAArB,KASFC,EAAOpD,EAAMqD,MAAMD,QAAO,SAAAhB,GAAQ,OAAOA,EAAKlC,KAAKK,cAAc+C,aAAaN,GAAgBZ,EAAKlC,KAAKG,eAAe,QAAQ,CAACJ,MAAM,WAAWiD,KACjJK,EAAevD,EAAMqD,MAAMD,QAAO,SAAAhB,GAAQ,OAAOA,EAAKlC,KAAKK,cAAc+C,aAAaN,KAItFQ,EAAY7B,KAAKC,MAA8C,IAAxCwB,EAAOK,QAAO,SAACC,EAAEC,GAAH,OAAUD,EAAEC,EAAE7C,SAAS,IAAQ,IAEpE8C,EAAWjC,KAAKC,MAAsD,IAAhD2B,EAAeE,QAAO,SAACC,EAAEC,GAAH,OAAUD,EAAEC,EAAE7C,SAAS,IAAQ,IAK7E,OAEI,eAAC,EAAD,CAAMN,UAAU,WAAhB,UACI,cAAC,EAAD,CAAgBS,SAAU+B,EAAc1B,UAAW4B,EAAe9B,eA9BhD,SAACyC,GAE/BZ,EAAgBY,IA4BmGtC,gBAtBpF,SAACuC,GAEhCX,EAAiBW,MAsBL,cAAC,EAAD,CAAerB,SAAUc,IACZ,IAAhBH,EAAOW,OAAa,kDAGrBX,EAAOjB,KAAI,SAAAC,GAAI,OACZ,cAAC,EAAD,CAA4BvB,MAAOuB,EAAKvB,MAAOC,OAAQsB,EAAKtB,OAAQZ,KAAMkC,EAAKlC,MAA5DkC,EAAK4B,OAI/B,cAAC,EAAD,CAAcpB,MAAOY,EAAaX,OAAQe,EAAY3D,MAAOiD,EAAe5C,KAAM0C,Q,OC+BvEiB,G,MAlFK,SAACjE,GAEnB,MAAsC+C,mBAAS,IAA/C,mBAAOmB,EAAP,KAAqBC,EAArB,KACA,EAAwCpB,mBAAS,IAAjD,mBAAOqB,EAAP,KAAsBC,EAAtB,KACA,EAAoCtB,mBAAS,IAA7C,mBAAOuB,EAAP,KAAoBC,EAApB,KACA,EAAuBxB,oBAAS,GAAhC,mBAAOyB,EAAP,KAAaC,EAAb,KASIC,EAAQC,EAAQ,IAmClB,OAEI,uBAAMC,SAnCM,SAACzD,GAGrB,GAFAA,EAAM0D,iBAE6B,IAA/BX,EAAaY,OAAOf,OAAxB,CAIA,IAAMgB,EAAY,CACdlE,MAAMqD,EACNpD,QAAQsD,EACRlE,KAAK,IAAI8E,KAAKV,IAKlBI,EAAMO,KAAK,qEAAX,eACMF,IAEHG,MAAK,SAAUC,GACdC,QAAQC,IAAIF,MAEhBnF,EAAMsF,kBAAkBP,GAKxBZ,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,SAxBXE,GAAS,IA+BL,UAEJ,sBAAKjE,UAAU,wBAAf,UAEc,sBAAKA,UAAS,+BAA2BgE,EAAoB,GAAZ,WAAjD,UACA,2CACA,uBAAOe,KAAK,OAAQvE,MAAOkD,EAAchD,SAhDlC,SAACC,GAAD,OAAUgD,EAAgBhD,EAAME,OAAOL,aAmD9C,sBAAKR,UAAU,uBAAf,UACA,6CACA,uBAAO+E,KAAK,SAASC,IAAI,MAAMlD,IAAI,OAAOmD,KAAK,MAAOzE,MAAOoD,EAAelD,SApDpE,SAACC,GAAD,OAASkD,EAAiBlD,EAAME,OAAOL,aAuD/C,sBAAKR,UAAU,uBAAf,UACA,2CACA,uBAAO+E,KAAK,OAAOC,IAAI,aAAalD,IAAI,aAActB,MAAOsD,EAAapD,SAxDpE,SAACC,GAAD,OAASoD,EAAepD,EAAME,OAAOL,gBA6DpD,sBAAKR,UAAU,wBAAf,UACQ,wBAAQ+E,KAAK,SAAb,2BACA,wBAAQA,KAAK,SAASG,QAAS1F,EAAM2F,SAArC,8BChDFC,G,MAzBI,SAAC5F,GAEpB,IASA,EAAsB+C,oBAAS,GAA/B,mBAAO8C,EAAP,KAAaC,EAAb,KAKI,OAEI,qBAAKtF,UAAU,cAAf,SACEqF,EAAsE,sBAAKrF,UAAU,cAAf,cAA8B,cAAC,EAAD,CAAa8E,kBAjB9F,SAACS,GAC1B,IAAMhB,EAAY,2BACXgB,GADU,IAEb/B,GAAGrC,KAAKqE,SAAS1C,aAErBtD,EAAMiG,aAAalB,IAY+IY,SAJnJ,kBAAKG,GAAQ,MAIgD,OAA/D,wBAAQJ,QALD,kBAAKI,GAAQ,IAKpB,mCC4BFI,MA7Cf,WACE,MAA6BnD,mBAAS,IAAtC,mBAAON,EAAP,KAAgB0D,EAAhB,KAiCA,OA/BAC,qBAAU,YACO,uCAAC,kCAAA1C,EAAA,sEACO2C,MAAO,sEADd,cACRlB,EADQ,gBAEWA,EAASmB,OAFpB,OAId,IAAUC,KAFJC,EAFQ,OAGRC,EAAK,GACMD,EACfC,EAAKC,KAAK,CACR1C,GAAGuC,EACH1F,MAAM2F,EAAaD,GAAK1F,MACxBC,OAAO0F,EAAaD,GAAKzF,OACzBZ,KAAK,IAAI8E,KAAKwB,EAAaD,GAAKrG,QAMtCiG,EAAYM,GAfI,2CAAD,qDAiBfE,MAcA,gCAEC,cAAC,EAAD,CAAYV,aAXO,SAACQ,GACvBN,EAAY,CAACM,GAAF,mBAAUhE,QAYnB,cAAC,EAAD,CAAUY,MAAOZ,QCvCrBmE,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.8fd3b718.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ExpenseDate.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n  \r\n\r\n    const month=props.date.toLocaleDateString('en-US',{month:'long'})\r\n    const day=props.date.toLocaleString('en-US',{day:'2-digit'})\r\n    const year=props.date.getFullYear()\r\n    return (\r\n        <div>\r\n             <div className='expense-date'>\r\n {/* Getting props from expenseItems */}\r\n<div className='expense-date__day'>{day}</div>\r\n<div className='expense-date__month'>{month}</div>\r\n<div className='expense-date__year'>{year}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate\r\n","import React from 'react'\r\nimport './Card.css'\r\n\r\nconst Card = (props) => {\r\n\r\n    const classes = ' Card ' + props.className\r\n    return (\r\n\r\n        <div className={classes}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport './ExpenseItems.css'\r\nimport ExpenseDate from '../ExpenseDate/ExpenseDate'\r\nimport Card from '../UI/Card/Card'\r\nconst ExpenseItems=(props)=> {\r\n\r\n    return (\r\n        <Card className=\"expense-item\">\r\n           <ExpenseDate date={props.date}/>\r\n            <div className=\"expense-item__description\">\r\n\r\n          <h2>{props.title}</h2>\r\n          <div className='expense-item__price'>${props.amount}</div>\r\n\r\n            </div>\r\n\r\n            \r\n            \r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ExpenseItems\r\n","import React from 'react';\r\n\r\nimport \"./ExpensesFilter.css\"\r\n\r\nconst ExpensesFilter = (props) => {\r\n \r\n const dropdownChangeHandler=(event)=>{\r\nprops.onChangeFilter(event.target.value)\r\n\r\n\r\n }\r\n\r\n const dropdownChangeHandler2=(event)=>{\r\n  \r\n  props.onChangeFilter2(event.target.value)\r\n  \r\n   }\r\n\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n         \r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          \r\n        </select>\r\n        <label>Filter by Month</label>\r\n        <select value={props.selected2} onChange={dropdownChangeHandler2} >\r\n          <option value='January' >Jan</option>\r\n          <option value='February' >Feb</option>\r\n          <option value='March' >Mar</option>\r\n          <option value='April' >Apr</option>\r\n          <option value='May' >May</option>\r\n          <option value='June' >Jun</option>\r\n          <option value='July' >Jul</option>\r\n          <option value='August' >Aug</option>\r\n          <option value='September' >Sep</option>\r\n          <option value='October' >Oct</option>\r\n          <option value='November' >Nov</option>\r\n          <option value='December' >Dec</option>\r\n\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react'\r\nimport './ChartBar.css'\r\n\r\nconst ChartBar = (props) => {\r\n\r\n    let barFillHeight='0%'\r\n\r\n    \r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n\r\n            <div className='chart-bar__fill' style={{height:barFillHeight}}></div>\r\n\r\n            </div>\r\n\r\n            <div className='chart__label'>{props.label} </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar\r\n","import React from 'react'\r\nimport ChartBar from './ChartBar'\r\nimport'./Chart.css'\r\n\r\nconst Chart = (props) => {\r\nconst dataPointsValues=props.dataPoints.map(item=>item.value)\r\n\r\nconst totalMaximum=Math.max(...dataPointsValues)\r\n\r\n    return (\r\n        <div className='chart'>\r\n            {props.dataPoints.map((item)=> <ChartBar key={item.label} value={item.value} maxValue={totalMaximum} label={item.label}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React from 'react'\r\nimport Chart from '../Chart/Chart'\r\n\r\n\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints=[\r\n        {label:'Jan',value:0},\r\n        {label:'Feb',value:0},\r\n        {label:'Mar',value:0},\r\n        {label:'Apr',value:0},\r\n        {label:'May',value:0},\r\n        {label:'Jun',value:0},\r\n        {label:'Jul',value:0},\r\n        {label:'Aug',value:0},\r\n        {label:'Sep',value:0},\r\n        {label:'Oct',value:0},\r\n        {label:'Nov',value:0},\r\n        {label:'Dec',value:0},\r\n      \r\n    ]\r\n\r\nfor(const item of props.expenses){\r\nconst expenseMonth=item.date.getMonth()\r\nchartDataPoints[expenseMonth].value += item.amount\r\n\r\n}\r\n        \r\n    \r\n    return (\r\n       <Chart dataPoints={chartDataPoints}/>)\r\n      \r\n    }\r\n\r\nexport default ExpensesChart\r\n","import React from 'react'\r\nimport './TotalExpense.css'\r\nconst TotalExpense = (props) => {\r\n    \r\n    return (\r\n        <div className='expense-total'>\r\n            <label><h4>Total Amount Spent in <em>{props.month}</em></h4></label>\r\n          \r\n            <div className='expense-total-amount'> ${props.total}</div>\r\n\r\n            <label><h4>Total Amount Spent in <em>{props.year}</em></h4></label>\r\n            <div className='expense-total-amount'> ${props.yTotal}</div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TotalExpense\r\n","\r\nimport ExpenseItems from \"../ExpenseItems/ExpenseItems\"\r\nimport './Expenses.css'\r\nimport Card from \"../UI/Card/Card\"\r\nimport React,{useState} from 'react'\r\nimport ExpensesFilter from \"../ExpenseFilter/ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport TotalExpense from \"./TotalExpense\";\r\n\r\nconst Expenses = (props) => {\r\nconst [filteredYear,setFilteredYear]=useState('2020')\r\n\r\n    const filterChangeHandler=(selectedYear)=>{\r\n\r\nsetFilteredYear(selectedYear)\r\n\r\n        }\r\n\r\n        const [filteredMonth,setFilteredMonth]=useState('January')\r\n\r\n    const filterChangeHandler2=(selectedMonth)=>{\r\n\r\nsetFilteredMonth(selectedMonth)\r\n\r\n        }\r\n\r\n//filtering year \r\nconst filter=props.items.filter(item=> {return(item.date.getFullYear().toString()===filteredYear && item.date.toLocaleString('en-US',{month:'long'})===filteredMonth)})\r\nconst filterYearOnly=props.items.filter(item=> {return(item.date.getFullYear().toString()===filteredYear)})\r\n        \r\n//calculating total amount per month based on filter\r\n//Rounding number \r\nconst TotalAmount=Math.round(filter.reduce((a,i)=> a=a+i.amount , 0)*100)/100\r\n//calculating subtotal amount per year\r\nconst allAmounts=Math.round(filterYearOnly.reduce((a,i)=> a=a+i.amount , 0)*100)/100\r\n\r\n\r\n\r\n\r\n    return (\r\n       \r\n        <Card className=\"expenses\" >\r\n            <ExpensesFilter selected={filteredYear} selected2={filteredMonth} onChangeFilter={filterChangeHandler} onChangeFilter2={filterChangeHandler2}/>\r\n     \r\n            <ExpensesChart expenses={filterYearOnly}/>\r\n        {filter.length===0 ? <p>No expenses found</p> : \r\n        \r\n        \r\n        filter.map(item=>\r\n           <ExpenseItems key={item.id} title={item.title} amount={item.amount} date={item.date}></ExpenseItems> ) }\r\n                \r\n        \r\n       \r\n    <TotalExpense total={TotalAmount} yTotal={allAmounts} month={filteredMonth} year={filteredYear}/>\r\n    \r\n                \r\n            \r\n\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default Expenses\r\n","import React,{useState} from 'react'\r\nimport \"./ExpenseForm.css\"\r\nconst ExpenseForm = (props) => {\r\n\r\n  const [enteredTitle ,setEnteredTitle]=useState('')\r\n  const [enteredNumber ,setEnteredNumber]=useState('')\r\n  const [enteredDate ,setEnteredDate]=useState('')\r\n  const [error,setError]=useState(true)\r\n\r\n  \r\n\r\nconst titleChangeHandler=(event)=> setEnteredTitle(event.target.value)\r\nconst numberChangeHandler=(event)=>setEnteredNumber(event.target.value)\r\nconst dateChangeHandler=(event)=>setEnteredDate(event.target.value)\r\n\r\n\r\nconst axios = require('axios')\r\n\r\nconst submitHandler=(event)=>{\r\nevent.preventDefault()\r\n\r\nif (enteredTitle.trim().length === 0){\r\n    setError(false)\r\n    return \r\n}\r\nconst expenseData={\r\n    title:enteredTitle,\r\n    amount:+enteredNumber,\r\n    date:new Date(enteredDate)\r\n}\r\n\r\n\r\n\r\naxios.post('https://expenseapp-e675d-default-rtdb.firebaseio.com/products.json', {\r\n   ...expenseData\r\n  })\r\n  .then(function (response) {\r\n    console.log(response);\r\n  })\r\nprops.onSaveExpenseData(expenseData)\r\n\r\n\r\n\r\n\r\nsetEnteredTitle('')\r\nsetEnteredNumber('')\r\nsetEnteredDate('')\r\n\r\n\r\n\r\n}\r\n    return (\r\n      \r\n        <form onSubmit={submitHandler}>\r\n             \r\n    <div className='new-expense__controls'>\r\n\r\n                  <div className={`new-expense__control ${!error ? 'inValid' : '' }`}>\r\n                  <label> Title</label>\r\n                  <input type=\"text\"  value={enteredTitle} onChange={titleChangeHandler}/> \r\n                  </div>\r\n\r\n                  <div className='new-expense__control'>    \r\n                  <label> Amount </label>\r\n                  <input type=\"number\" min=\"0.1\" max=\"9999\" step=\"0.1\"  value={enteredNumber} onChange={numberChangeHandler} />\r\n                  </div>\r\n\r\n                  <div className=\"new-expense__control\">   \r\n                  <label> Date </label>\r\n                  <input type=\"date\" min=\"2020-01-01\" max=\"2021-12-30\"  value={enteredDate} onChange={dateChangeHandler} />\r\n                  </div>\r\n               \r\n         </div> \r\n\r\n         <div className=\"new-expense__actions \">\r\n                 <button type=\"submit\"> Add Expense </button> \r\n                 <button type=\"button\" onClick={props.onCancel}> Cancel </button> \r\n         </div>\r\n\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nexport default ExpenseForm\r\n","import React,{useState} from 'react'\r\nimport ExpenseForm from '../ExpenseForm/ExpenseForm'\r\nimport \"./NewExpense.css\"\r\nconst NewExpense = (props) => {\r\n\r\nconst saveExpenseDataHandler=(enteredData)=>{\r\n    const expenseData={\r\n        ...enteredData,\r\n        id:Math.random().toString()\r\n    }\r\n    props.onAddExpense(expenseData)\r\n}\r\n\r\n\r\nconst [show, setShow]=useState(false)\r\n\r\n\r\nconst addExpenseHandler=()=> setShow(true)\r\nconst cancelButton=()=> setShow(false)\r\n    return (\r\n      \r\n        <div className=\"new-expense\">\r\n        {!show ? <button onClick={addExpenseHandler}> Add Expense Item</button>:<div className=\"new-expense\"> <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={cancelButton}></ExpenseForm> </div>}\r\n        </div> \r\n    \r\n    )\r\n}\r\n\r\nexport default NewExpense\r\n","import React,{useState,useEffect} from \"react\";\nimport Expenses from \"./Components/Expenses/Expenses\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\n\n\nfunction App() {\n  const [expenses,setExpenses]=useState([])\n  \n  useEffect(()=>{\n    const fetchData=async()=>{\n      const response=await fetch ('https://expenseapp-e675d-default-rtdb.firebaseio.com/products.json')\n      const responseData=await response.json()\n      const data=[]\n      for(const key in responseData){\n        data.push({\n          id:key,\n          title:responseData[key].title,\n          amount:responseData[key].amount,\n          date:new Date(responseData[key].date)\n      \n        })\n      }\n     \n    \n    setExpenses(data) \n    }\n    fetchData()\n    \n  }) \n\n  \nconst addExpenseHandler=(data)=>{\n  setExpenses([data,...expenses])\n}\n \n  \n\n\n\n  return (\n    <div>\n   \n     <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n     \n    <Expenses items={expenses}></Expenses>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}